unit uCadProduto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uTelaHerenca, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Mask, Vcl.ComCtrls, Vcl.DBCtrls,
  Vcl.Buttons, Vcl.ExtCtrls, uDTMconexao, cxGraphics, cxControls,
  cxLookAndFeels, cxLookAndFeelPainters, cxContainer, cxEdit, dxSkinsCore,
  dxSkinBasic, dxSkinBlack, dxSkinBlue, dxSkinBlueprint, dxSkinCaramel,
  dxSkinCoffee, dxSkinDarkroom, dxSkinDarkSide, dxSkinDevExpressDarkStyle,
  dxSkinDevExpressStyle, dxSkinFoggy, dxSkinGlassOceans, dxSkinHighContrast,
  dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky, dxSkinLondonLiquidSky,
  dxSkinMcSkin, dxSkinMetropolis, dxSkinMetropolisDark, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinOffice2013DarkGray,
  dxSkinOffice2013LightGray, dxSkinOffice2013White, dxSkinOffice2016Colorful,
  dxSkinOffice2016Dark, dxSkinOffice2019Black, dxSkinOffice2019Colorful,
  dxSkinOffice2019DarkGray, dxSkinOffice2019White, dxSkinPumpkin, dxSkinSeven,
  dxSkinSevenClassic, dxSkinSharp, dxSkinSharpPlus, dxSkinSilver,
  dxSkinSpringtime, dxSkinStardust, dxSkinSummer2008, dxSkinTheAsphaltWorld,
  dxSkinTheBezier, dxSkinsDefaultPainters, dxSkinValentine,
  dxSkinVisualStudio2013Blue, dxSkinVisualStudio2013Dark,
  dxSkinVisualStudio2013Light, dxSkinVS2010, dxSkinWhiteprint,
  dxSkinXmas2008Blue, cxTextEdit, cxCurrencyEdit,
  cCadProduto, uEnum;

type
  TfrmCadProduto = class(TfrmTelaHerenca)
    qryListagemprodutoID: TFDAutoIncField;
    qryListagemnome: TStringField;
    qryListagemdescricao: TStringField;
    qryListagemvalor: TFMTBCDField;
    qryListagemquantidade: TFMTBCDField;
    qryListagemcategoriaID: TIntegerField;
    qryListagemDescricaoCategoria: TStringField;
    editProdutoID: TLabeledEdit;
    editNome: TLabeledEdit;
    Label1: TLabel;
    editValor: TcxCurrencyEdit;
    editQuantidade: TcxCurrencyEdit;
    Label2: TLabel;
    Label3: TLabel;
    lkpCategoria: TDBLookupComboBox;
    QryCategoria: TFDQuery;
    dtsCategoria: TDataSource;
    QryCategoriacategoriaID: TFDAutoIncField;
    QryCategoriadescricao: TStringField;
    editDescricao: TMemo;
    procedure btnAlterarClick(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    oProduto : TProduto;

  public
    { Public declarations }
    function Apagar: Boolean; override;
    function Gravar (EstadoDoCadastro : TEstadoDoCadastro): Boolean; override;
  end;

var
  frmCadProduto: TfrmCadProduto;

implementation

{$R *.dfm}
{$REGION 'OVERRIDE'}
function TfrmCadProduto.Apagar: Boolean;
begin
  if oProduto.Selecionar(QryListagem.FieldByName('produtoID').AsInteger) then
   begin
    Result := oProduto.ApagarDB;
   end;
end;

function TfrmCadProduto.Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean;
begin
  if editProdutoID.Text <> EmptyStr then
   oProduto.codigo := StrToInt(editProdutoID.Text)
  else
   oProduto.codigo := 0;

  oProduto.nome              := editNome.Text;
  oProduto.descricao         := editDescricao.Text;
  oProduto.categoriaID       := lkpCategoria.KeyValue;
  oProduto.valor             := editValor.Value;
  oProduto.quantidade        := editQuantidade.Value;

  if (EstadoDoCadastro = ecInserir) then
   Result := oProduto.InserirDB
  else if (EstadoDoCadastro = ecAlterar) then
   Result := oProduto.AtualizarDB;

end;
{$ENDREGION}

procedure TfrmCadProduto.btnAlterarClick(Sender: TObject);
begin
  if oProduto.Selecionar(QryListagem.FieldByName('produtoID').AsInteger) then
  begin
   editProdutoID.Text          := IntToStr(oProduto.codigo);
   editNome.Text               := oProduto.nome;
   editDescricao.Text          := oProduto.descricao;
   lkpCategoria.KeyValue       := oProduto.categoriaID;
   editValor.Value             := oProduto.valor;
   editQuantidade.Value        := oProduto.quantidade;
  end
  else begin
   btnCancelar.Click;
   Abort;
  end;

  inherited;
end;

procedure TfrmCadProduto.btnNovoClick(Sender: TObject);
begin
  inherited;
  editNome.SetFocus;
end;

procedure TfrmCadProduto.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  QryCategoria.Close;
  if Assigned(oProduto) then
    FreeAndNil(oProduto);
  inherited;

end;

procedure TfrmCadProduto.FormCreate(Sender: TObject);
begin
  inherited;
  oProduto := TProduto.Create(dtmConexao.ConexaoDBase);
  IndiceAtual := 'produtoID';
end;

procedure TfrmCadProduto.FormShow(Sender: TObject);
begin
  inherited;
  QryCategoria.Open;
end;

end.
