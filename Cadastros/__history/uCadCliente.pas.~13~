unit uCadCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uTelaHerenca, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Mask, Vcl.ComCtrls, Vcl.DBCtrls,
  Vcl.Buttons, Vcl.ExtCtrls, JvExMask, JvToolEdit,
  uDTMconexao, uEnum, cCadCliente;

type
  TfrmCadCliente = class(TfrmTelaHerenca)
    editNome: TLabeledEdit;
    editClienteID: TLabeledEdit;
    editCEP: TMaskEdit;
    labelCEP: TLabel;
    editEndereco: TLabeledEdit;
    editBairro: TLabeledEdit;
    editCidade: TLabeledEdit;
    editTelefone: TMaskEdit;
    Ltelefone: TLabel;
    editEmail: TLabeledEdit;
    editDataNascimento: TJvDateEdit;
    LdataNascimento: TLabel;
    qryListagemclienteID: TFDAutoIncField;
    qryListagemnome: TStringField;
    qryListagemendereco: TStringField;
    qryListagemcidade: TStringField;
    qryListagembairro: TStringField;
    qryListagemestado: TStringField;
    qryListagemcep: TStringField;
    qryListagemtelefone: TStringField;
    qryListagememail: TStringField;
    qryListagemdataNascimento: TSQLTimeStampField;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnNovoClick(Sender: TObject);
  private
    { Private declarations }
    oCliente: TCliente;
  public
    { Public declarations }
    function Apagar: Boolean; override;
    function Gravar (EstadoDoCadastro: TEstadoDoCadastro):Boolean; override;
  end;

var
  frmCadCliente: TfrmCadCliente;

implementation

{$R *.dfm}

{ TfrmCadCliente }



procedure TfrmCadCliente.btnNovoClick(Sender: TObject);
begin
  inherited;
  editDataNascimento.Date := Date;
  editNome.SetFocus;
end;


{$ENDREGION}


function TfrmCadCliente.Apagar: Boolean;
begin
  if oCliente.Selecionar(QryListagem.FieldByName('clienteID').AsInteger) then
   begin
    Result := oCliente.ApagarDB;
   end;
end;

procedure TfrmCadCliente.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  if Assigned(oCliente) then
   FreeAndNil(oCliente);
end;

procedure TfrmCadCliente.FormCreate(Sender: TObject);
begin
  inherited;
   oCliente := TCliente.Create(dtmConexao.ConexaoDBase);

   indiceAtual := 'clienteID';
end;

function TfrmCadCliente.Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean;
begin
  if editClienteID.Text <> EmptyStr then
   oCliente.codigo := StrToInt(editClienteID.Text)
  else
   oCliente.codigo := 0;

  oCliente.nome           := editNome.Text;
  oCliente.cep            := editCEP.Text;
  oCliente.endereco       := editEndereco.Text;
  oCliente.bairro         := editBairro.Text;
  oCliente.cidade         := editCidade.Text;
  oCliente.telefone       := editTelefone.Text;
  oCliente.email          := editEmail.Text;
  oCliente.dataNascimento := editDataNascimento.Date;

  if (EstadoDoCadastro = ecInserir) then
   Result := oCliente.InserirDB
  else if (EstadoDoCadastro = ecAlterar) then
   Result := oCliente.AtualizarDB;

end;

end.
